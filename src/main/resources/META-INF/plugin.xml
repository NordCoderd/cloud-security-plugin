<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>dev.protsenko.security-linter</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>Infrastructure Security Linter</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="tech@protsenko.dev" url="https://protsenko.dev">Dmitry Protsenko</vendor>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>Docker</depends>

    <resource-bundle>messages.SecurityPluginBundle</resource-bundle>

    <extensions defaultExtensionNs="com.intellij">
        <localInspection
                implementationClass="dev.protsenko.securityLinter.docker.inspection.from.DS001LatestTagIsUsedInspection"
                displayName="Docker latest tag is used"
                groupPathKey="common.group-key" groupKey="common.docker-group-key" language="Dockerfile"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="dev.protsenko.securityLinter.docker.inspection.user.DockerfileUserInspection"
                displayName="Missing user or root is used"
                groupPathKey="common.group-key" groupKey="common.docker-group-key" language="Dockerfile"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="dev.protsenko.securityLinter.docker.inspection.expose.DockerfileExposeInspection"
                displayName="SSH port exposed"
                groupPathKey="common.group-key" groupKey="common.docker-group-key" language="Dockerfile"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="dev.protsenko.securityLinter.docker.inspection.copy_or_add.DockerfileCopyOrAddInspection"
                displayName="COPY '--from' referring to the current image"
                groupPathKey="common.group-key" groupKey="common.docker-group-key" language="Dockerfile"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="dev.protsenko.securityLinter.docker.inspection.entrypoint.DockerFileEntrypointInspection"
                displayName="Multiple ENTRYPOINT instructions listed"
                groupPathKey="common.group-key" groupKey="common.docker-group-key" language="Dockerfile"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="dev.protsenko.securityLinter.docker.inspection.workdir.DockerfileWorkdirInspection"
                displayName="WORKDIR path not absolute"
                groupPathKey="common.group-key" groupKey="common.docker-group-key" language="Dockerfile"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="dev.protsenko.securityLinter.docker.inspection.from.DS011DuplicateAliasesDefinedInspection"
                displayName="Duplicate aliases defined in different FROMs"
                groupPathKey="common.group-key" groupKey="common.docker-group-key" language="Dockerfile"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="dev.protsenko.securityLinter.docker.inspection.run.DS013UsingWgetAndCurlBothInspection"
                displayName="RUN using 'wget' and 'curl'"
                groupPathKey="common.group-key" groupKey="common.docker-group-key" language="Dockerfile"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="dev.protsenko.securityLinter.docker.inspection.cmd.DockerFileCmdInspection"
                displayName="Multiple CMD instructions listed"
                groupPathKey="common.group-key" groupKey="common.docker-group-key" language="Dockerfile"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="dev.protsenko.securityLinter.docker.inspection.maintainer.DockerfileMaintainerInspection"
                displayName="Deprecated MAINTAINER used"
                groupPathKey="common.group-key" groupKey="common.docker-group-key" language="Dockerfile"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="dev.protsenko.securityLinter.docker.inspection.healthcheck.DockerfileHealthCheckInspection"
                displayName="Multiple HEALTHCHECK defined"
                groupPathKey="common.group-key" groupKey="common.docker-group-key" language="Dockerfile"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="dev.protsenko.securityLinter.docker.inspection.env.DockerFileEnvInspection"
                displayName="Potential secret in ENV"
                groupPathKey="common.group-key" groupKey="common.docker-group-key" language="Dockerfile"
                enabledByDefault="true"/>

        <notificationGroup id="dev.protsenko.securityLinter"
                           displayType="BALLOON"
                           key="common.notification-group"/>

        <localInspection
                implementationClass="dev.protsenko.securityLinter.docker.inspection.run.DockerfileRunInspection"
                displayName="Misconfigurations in RUN command"
                groupPathKey="common.group-key" groupKey="common.docker-group-key" language="Dockerfile"
                enabledByDefault="true"/>
    </extensions>

    <extensions defaultExtensionNs="dev.protsenko.security-linter">
        <dockerFileRunAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.run.impl.PackageManagerAutoYesAnalyzer"/>
        <dockerFileRunAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.run.impl.AptGetNoInstallRecommendsAnalyzer"/>
        <dockerFileRunAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.run.impl.ArgumentsInRunCommandAnalyzer"/>
        <dockerFileRunAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.run.impl.CurlBashingAnalyzer"/>
        <dockerFileRunAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.run.impl.DistUpgradeAnalyzer"/>
        <dockerFileRunAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.run.impl.MissingDnfCleanAnalyzer"/>
        <dockerFileRunAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.run.impl.PackageManagerUpdateWithoutInstallAnalyzer"/>
        <dockerFileRunAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.run.impl.SudoIsUsedAnalyzer"/>
        <dockerFileRunAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.run.impl.UsingCdToChangeDirectoryAnalyzer"/>
        <dockerFileRunAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.run.impl.YumInstallWithoutCleanAnalyzer"/>
        <dockerFileRunAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.run.impl.ZypperInstallWithoutCleanAnalyzer"/>

        <dockerFileExposeAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.expose.impl.SshPortExposedAnalyzer"/>
        <dockerFileExposeAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.expose.impl.ExposedPortOutOfRangeAnalyzer"/>

        <dockerFileCopyOrAddAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.copy_or_add.impl.CopyReferringToCurrentImageAnalyzer"/>
        <dockerFileCopyOrAddAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.copy_or_add.impl.UseSlashForCopyArgsAnalyzer"/>
        <dockerFileCopyOrAddAnalyzer implementation="dev.protsenko.securityLinter.docker.inspection.copy_or_add.impl.DockerfileAddInspection"/>
    </extensions>

    <extensionPoints>
        <extensionPoint name="dockerFileRunAnalyzer"
                        interface="dev.protsenko.securityLinter.docker.inspection.run.core.DockerfileRunAnalyzer"/>
        <extensionPoint name="dockerFileExposeAnalyzer"
                        interface="dev.protsenko.securityLinter.docker.inspection.expose.core.DockerfileExposeAnalyzer"/>
        <extensionPoint name="dockerFileCopyOrAddAnalyzer"
                        interface="dev.protsenko.securityLinter.docker.inspection.copy_or_add.core.DockerfileCopyOrAddAnalyzer"/>
        <extensionPoint name="dockerFileFromAnalyzer"
                        interface="dev.protsenko.securityLinter.docker.inspection.from.core.DockerfileFromAnalyzer"/>
    </extensionPoints>

</idea-plugin>