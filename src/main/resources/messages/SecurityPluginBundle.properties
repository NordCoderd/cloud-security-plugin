inspection-message-template=<html><body><a href="https://protsenko.dev/infrastructure-security/{0}">[Documentation]</a> {1}</body></html>
dfs001.documentation=missing-or-latest-version-tag
dfs002.documentation=avoid-default-root-dynamic-user
dfs003.documentation=duplicate-aliases-in-froms
dsf004.documentation=multiple-cmd-entrypoint-instructions
dfs005.documentation=json-notation-cmd-entrypoint
dfs006.documentation=self-referencing-copy-from
dfs007.documentation=add-instead-of-copy
dfs008.documentation=copy-multiple-arguments-slash
dfs009.documentation=possible-secrets-in-env
dfs010.documentation=exposed-port-out-of-range
dfs011.documentation=port-22-exposed
dfs012.documentation=multiple-healthcheck-defined
dfs013.documentation=deprecated-maintainer-used
dfs014.documentation=no-install-recommends
dfs015.documentation=avoid-using-apt
dfs016.documentation=arg-variables-overridden
dfs017.documentation=curl-bashing-detected
dfs018.documentation=no-dist-upgrade
dfs019.documentation=purge-dnf-package-cache
dfs020.documentation=use-package-manager-auto-confirm
dfs021.documentation=update-and-install-single-run
dfs022.documentation=run-using-sudo
dfs023.documentation=use-workdir-over-cd
dfs024.documentation=purge-yum-package-cache
dfs025.documentation=purge-zipper-cache
dfs026.documentation=standardise-remote-get
dfs027.documentation=workdir-path-not-absolute
dfs028.documentation=multiple-consecutive-run-commands
dfs029.documentation=useradd-missing-l-flag-high-uid
# Common
common.group-key=Security and Best practices
common.docker-group-key=Docker
common.docker-compose-group-key=Docker compose
common.notification-group=Infrastructure security
# QuickFixes
ds001.lookup-for-digest=Look up and replace with digest
ds002.replace-root-with-nobody=Replace a user with nobody
ds002.add-nobody-user=Add nobody user
ds004.replace-add-with-copy=Replace ADD with COPY
ds003.remove-dangerous-port-exposed=Remove dangerous port exposed
ds005.remove-referring=Remove referring to current the current image
ds006.remove-redundant-instruction=Remove redundant instruction
ds007.remove-broken-port=Remove wrong port
ds011.remove-duplicated-alias=Remove duplicated alias
ds020.replace-maintainer=Replace MAINTAINER with LABEL
ds021.remove-redundant-healthcheck=Remove redundant HEALTHCHECK
ds026.remove-env-with-secret=Remove ENV with secret
ds031.replace-with-json-notation=Replace with JSON notation
# Localization
### dfs001
ds001.latest-tag=':latest' tag used\nWhen using image you should use a specific tag to avoid uncontrolled behavior when the image is updated.
ds001.missing-version-tag=Missing version tag\nWhen using image you should use a specific tag to avoid uncontrolled behavior when the image is updated.
### dfs002
ds002.root-user-is-used=Image user should not be 'root'\nRunning containers with 'root' user can lead to a container escape situation.
ds002.missing-user=User should be declared, often by default it is root\nRunning containers with 'root' user can lead to a container escape situation.
ds025.arg-in-user=User should be static. Dynamic user assignment can be overridden to root, risking container escape.
### dfs003
ds011.no-duplicate-alias=Duplicate aliases defined in different FROMs\nDifferent FROMs can't have the same alias defined.
### dfs004
ds015.only-one-cmd-or-entrypoint=Multiple CMD or ENTRYPOINT instructions listed\nThere can only be one CMD and ENTRYPOINT instruction in a Dockerfile. If you list more than one instruction then only the last one will take effect.
### dfs005
ds031.use-json-notation=Use JSON notation for CMD and ENTRYPOINT arguments to ensure proper parsing and avoid unexpected behavior.
### dfs006
ds005.copy-referring-to-the-current-image=COPY '--from' referring to the current image\nCOPY '--from' should not mention the current FROM alias, since it is impossible to copy from itself.
### dfs007
ds004.add-instead-copy=ADD instead of COPY\nYou should use COPY instead of ADD unless you want to extract a tar file.
### dfs008
ds010.use-slash-for-copy-args=COPY with more than two arguments not ending with slash\nWhen a COPY command has more than two arguments, the last one should end with a slash.
### dfs009
ds026.possible-secrets-in-env=Potential secret in ENV key found: {0}
### dfs010
ds007.port-out-of-range=Exposed port {0} out of range\nUNIX ports outside the range 0-65535 are exposed.
### dfs011
ds003.ssh-port-exposed=Port 22 exposed\nExposing port 22 might allow users to SSH into the container.
### dfs012
ds021.only-one-healthcheck=Multiple HEALTHCHECK defined\nProviding more than one HEALTHCHECK instruction per stage is confusing and error-prone.
### dfs013
ds020.no-maintainer=Deprecated MAINTAINER used\nMAINTAINER has been deprecated since Docker 1.13.0.
### dfs014
ds030.use-no-install-recommends=Use --no-install-recommends with apt-get to avoid installing unnecessary packages and reduce image size.
### dfs015
ds032.apt-is-used=Do not use apt as it is meant to be an end-user tool, use apt-get or apt-cache instead.
### dfs016
ds028.avoid-arg-in-run=Using ARG variables in RUN commands can be overridden by users, leading to unintended behaviors or security risks.
### dfs017
ds027.avoid-curl-bashing=Curl bashing detected\nAvoid using curl or wget with pipe (|) or redirection (>) to directly execute scripts from untrusted sources.
### dfs018
ds022.no-dist-upgrade=Package manager `dist-upgrade` used\nPackage manager `dist-upgrade` upgrades a major version so it doesn't make more sense in Dockerfile.
### dfs019
ds017.purge-dnf-package-cache='dnf clean all' missing\nCached package data should be cleaned after installation to reduce image size.
### dfs020
ds019.use-package-manager-auto-confirm=Package manager with missing '-y' to avoid manual input\nPackage manager calls should use the flag '-y' to avoid manual user input.
### dfs021
ds016.no-orphan-package-update='RUN <package-manager> update' instruction alone\nThe instruction 'RUN <package-manager> update' should always be followed by '<package-manager> install' in the same RUN statement.
### dfs022
ds009.run-using-sudo=RUN using 'sudo'\nAvoid using 'RUN' with 'sudo' commands, as it can lead to unpredictable behavior.
### dfs023
ds012.use-workdir-over-cd='RUN cd ...' to change directory\nUse WORKDIR instead of proliferating instructions like 'RUN cd ? && do-something', which are hard to read, troubleshoot, and maintain.
### dfs024
ds014.purge-yum-package-cache='yum clean all' missing\nYou should use 'yum clean all' after using a 'yum install' command to clean package cached data and reduce image size.
### dfs025
ds018.purge-zipper-cache='zypper clean' missing\nThe layer and image size should be reduced by deleting unneeded caches after running zypper.
### dfs026
ds013.standardise-remote-get=RUN using 'wget' and 'curl'\nAvoid using both 'wget' and 'curl' since these tools have the same effect.
### dfs027
ds008.workdir-path-not-absolute=WORKDIR path not absolute\nFor clarity and reliability, you should always use absolute paths for your WORKDIR.
### dfs028
ds034.multiple-consecutive-run-commands=Multiple consecutive 'RUN' instructions. Consider consolidation.
### dfs029
ds035.useradd-missing-l-flag-high-uid='useradd' without the '-l' flag and a high UID may lead to an excessively large image.

### dcs001 [only docker-compose]
ds033.using-privileged=Using privileged: true grants full root access to the host, bypassing isolation mechanisms.

# Not implemented
ds029.missing-healthcheck=Missing HEALTHCHECK instruction
ds023.multiple-exposed-port=Port {0} exposed more than one time.
ds024.wrong-port-definition=Port {0} is incorrect.